13 11 0
....2.2.2....
.X0X.X.X.X0X.
0121.101.1210
1X0X2X.X2X0X1
21.02...20.12
.X0X2X1X2X0X.
21.02...20.12
1X0X2X.X2X0X1
0121.101.1210
.X0X.X.X.X0X.
....2.2.2....
2
0 0 0 0 1 3
0 1 12 10 1 3


5 9 0
XX0XX
XX.XX
0...0
XX.XX
XX0XX
XX.XX
0...0
XX.XX
XX0XX
2
0 0 2 2 1 5
0 1 2 6 1 5


        for (int i = 0; i < curBoard.playersAmm; i++)
        {
            if (curBoard.players[i].empty)
            {
                scores[i] = -100;
            }
            else
            {
                scores[i] += board.scores[i]* 0.3f; 
                scores[i] += board.Movements(board.players[i].position).Count() - 1;
                double b = 0;
                Point p = board.players[i].position;
                for (int r = 1; r < 5; r++)
                {
                    for (int a = 0; a <= r; a++)
                    {
                        int x = p.x + a, y = p.y + (r - a);
                        if (board.Grid.InBounds(x, y) && !board.Grid[x, y].empty)
                        {
                            if (board.Grid[x, y].type == 3 && board.Grid[x, y].param1 < 15)
                                b += 0.3 / (r + 2);
                            else if (board.Grid[x, y].type == 2)
                                b += 2 / (r + 1);
                        }
                    }
                }
                scores[i] += (float)b;
                scores[i] += board.upgrades[i] * 4;
            }
        }